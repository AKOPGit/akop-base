 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF'
diff --git a/bootstrap/app.php b/bootstrap/app.php
index da33920194abbbcf8a3a0b5a46bcc4ddf6a59bbf..f748ab308f66dac2fc3fd56529f1a0f12f0eaaeb 100644
--- a/bootstrap/app.php
+++ b/bootstrap/app.php
@@ -1,19 +1,31 @@
 <?php

 use Illuminate\Foundation\Application;
 use Illuminate\Foundation\Configuration\Exceptions;
 use Illuminate\Foundation\Configuration\Middleware;
+use Illuminate\Http\Request;
+use App\Exceptions\Auth\LoginException;
+use App\Exceptions\Auth\RegistrationException;

 return Application::configure(basePath: dirname(__DIR__))
     ->withRouting(
         web: __DIR__.'/../routes/web.php',
         commands: __DIR__.'/../routes/console.php',
         health: '/up',
         api: __DIR__.'/../routes/api.php',
     )
     ->withMiddleware(function (Middleware $middleware) {
         //
     })
-    ->withExceptions(function (Exceptions $exceptions) {
-        //
-    })->create();
+    ->withExceptions(function (Exceptions $exceptions): void {
+        $exceptions->render(function (LoginException|RegistrationException $e, Request $request) {
+            if ($request->expectsJson()) {
+                return response()->json([
+                    'message' => $e->getMessage(),
+                ], 422);
+            }
+
+            return back()->withErrors(['auth' => $e->getMessage()])->withInput();
+        });
+    })
+    ->create();
diff --git a/tests/Feature/LoginExceptionTest.php b/tests/Feature/LoginExceptionTest.php
new file mode 100644
index 0000000000000000000000000000000000000000..4a6a5ebccea3e79b736b5c8ed8cbbfc46fba0969
--- /dev/null
+++ b/tests/Feature/LoginExceptionTest.php
@@ -0,0 +1,46 @@
+<?php
+
+namespace Tests\Feature;
+
+use App\Models\User;
+use Illuminate\Foundation\Testing\RefreshDatabase;
+use Tests\TestCase;
+
+class LoginExceptionTest extends TestCase
+{
+    use RefreshDatabase;
+
+    public function test_invalid_credentials_redirect_back_with_error(): void
+    {
+        User::factory()->create([
+            'email' => 'john@example.com',
+            'password' => bcrypt('secret123'),
+        ]);
+
+        $response = $this->from('/login')->post('/login', [
+            'email' => 'john@example.com',
+            'password' => 'wrong',
+        ]);
+
+        $response->assertRedirect('/login');
+        $response->assertSessionHasErrors('auth');
+    }
+
+    public function test_invalid_credentials_ajax_returns_json(): void
+    {
+        User::factory()->create([
+            'email' => 'john@example.com',
+            'password' => bcrypt('secret123'),
+        ]);
+
+        $response = $this->postJson('/login', [
+            'email' => 'john@example.com',
+            'password' => 'wrong',
+        ]);
+
+        $response->assertStatus(422);
+        $response->assertJson([
+            'message' => 'Invalid credentials.',
+        ]);
+    }
+}

EOF
)
